{"ast":null,"code":"import _objectSpread from\"/Users/chetchung/Documents/V0Careplanparrot/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{apiClient}from'../api/client';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext({});export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[isAuthenticated,setIsAuthenticated]=useState(false);// 檢查用戶登入狀態\nconst checkAuthStatus=async()=>{try{setLoading(true);const response=await apiClient.get('/auth/me');if(response.data.success){setUser(response.data.data);setIsAuthenticated(true);}else{setUser(null);setIsAuthenticated(false);}}catch(error){console.error('Auth check failed:',error);setUser(null);setIsAuthenticated(false);}finally{setLoading(false);}};// 登入\nconst login=async(email,password)=>{try{const response=await apiClient.post('/auth/login',{email,password});if(response.data.success){setUser(response.data.data);setIsAuthenticated(true);return{success:true};}else{var _response$data$error;return{success:false,error:((_response$data$error=response.data.error)===null||_response$data$error===void 0?void 0:_response$data$error.message)||'登入失敗'};}}catch(error){var _error$response,_error$response$data,_error$response$data$;console.error('Login failed:',error);return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:(_error$response$data$=_error$response$data.error)===null||_error$response$data$===void 0?void 0:_error$response$data$.message)||'登入失敗，請稍後再試'};}};// 註冊\nconst register=async(email,password,name)=>{try{const response=await apiClient.post('/auth/register',{email,password,name});if(response.data.success){setUser(response.data.data);setIsAuthenticated(true);return{success:true};}else{var _response$data$error2;return{success:false,error:((_response$data$error2=response.data.error)===null||_response$data$error2===void 0?void 0:_response$data$error2.message)||'註冊失敗'};}}catch(error){var _error$response2,_error$response2$data,_error$response2$data2;console.error('Registration failed:',error);return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:(_error$response2$data2=_error$response2$data.error)===null||_error$response2$data2===void 0?void 0:_error$response2$data2.message)||'註冊失敗，請稍後再試'};}};// 登出\nconst logout=async()=>{try{await apiClient.post('/auth/logout');}catch(error){console.error('Logout error:',error);}finally{setUser(null);setIsAuthenticated(false);}};// Google 登入 (待實現)\nconst loginWithGoogle=async()=>{// TODO: 實現 Google OAuth 流程\nconsole.log('Google login not implemented yet');return{success:false,error:'Google 登入功能尚未實現'};};// 更新用戶資料\nconst updateUser=newUserData=>{setUser(prevUser=>_objectSpread(_objectSpread({},prevUser),newUserData));};// 應用載入時檢查認證狀態\nuseEffect(()=>{checkAuthStatus();},[]);const value={user,loading,isAuthenticated,login,register,logout,loginWithGoogle,updateUser,checkAuthStatus};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiClient","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuthStatus","response","get","data","success","error","console","login","email","password","post","_response$data$error","message","_error$response","_error$response$data","_error$response$data$","register","name","_response$data$error2","_error$response2","_error$response2$data","_error$response2$data2","logout","loginWithGoogle","log","updateUser","newUserData","prevUser","_objectSpread","value","Provider"],"sources":["/Users/chetchung/Documents/V0Careplanparrot/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiClient } from '../api/client';\n\nconst AuthContext = createContext({});\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // 檢查用戶登入狀態\n  const checkAuthStatus = async () => {\n    try {\n      setLoading(true);\n      const response = await apiClient.get('/auth/me');\n      if (response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n      } else {\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 登入\n  const login = async (email, password) => {\n    try {\n      const response = await apiClient.post('/auth/login', {\n        email,\n        password,\n      });\n\n      if (response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n        return { success: true };\n      } else {\n        return { \n          success: false, \n          error: response.data.error?.message || '登入失敗' \n        };\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      return { \n        success: false, \n        error: error.response?.data?.error?.message || '登入失敗，請稍後再試' \n      };\n    }\n  };\n\n  // 註冊\n  const register = async (email, password, name) => {\n    try {\n      const response = await apiClient.post('/auth/register', {\n        email,\n        password,\n        name,\n      });\n\n      if (response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n        return { success: true };\n      } else {\n        return { \n          success: false, \n          error: response.data.error?.message || '註冊失敗' \n        };\n      }\n    } catch (error) {\n      console.error('Registration failed:', error);\n      return { \n        success: false, \n        error: error.response?.data?.error?.message || '註冊失敗，請稍後再試' \n      };\n    }\n  };\n\n  // 登出\n  const logout = async () => {\n    try {\n      await apiClient.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  // Google 登入 (待實現)\n  const loginWithGoogle = async () => {\n    // TODO: 實現 Google OAuth 流程\n    console.log('Google login not implemented yet');\n    return { success: false, error: 'Google 登入功能尚未實現' };\n  };\n\n  // 更新用戶資料\n  const updateUser = (newUserData) => {\n    setUser(prevUser => ({ ...prevUser, ...newUserData }));\n  };\n\n  // 應用載入時檢查認證狀態\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    loginWithGoogle,\n    updateUser,\n    checkAuthStatus,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}