{"ast":null,"code":"import axios from'axios';// 創建 axios 實例\nconst apiClient=axios.create({baseURL:process.env.REACT_APP_API_BASE_URL||'/api/v1',timeout:30000,// 30 秒超時\nheaders:{'Content-Type':'application/json'},withCredentials:true// 包含 cookies (用於 session 認證)\n});// 請求攔截器\napiClient.interceptors.request.use(config=>{// 可以在這裡添加認證 token (未來使用 JWT 時)\n// const token = localStorage.getItem('token');\n// if (token) {\n//   config.headers.Authorization = `Bearer ${token}`;\n// }\nreturn config;},error=>{return Promise.reject(error);});// 響應攔截器\napiClient.interceptors.response.use(response=>{return response;},error=>{var _error$response,_error$response2,_error$response3;// 處理常見錯誤\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// 未授權，可能需要重新登入\nconsole.warn('Unauthorized access - user may need to login');// 可以觸發登出邏輯\n// store.dispatch(logout());\n}else if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===403){// 禁止訪問\nconsole.warn('Access forbidden');}else if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)>=500){// 服務器錯誤\nconsole.error('Server error:',error.response);}return Promise.reject(error);});export{apiClient};// API 端點定義\nexport const API_ENDPOINTS={// 認證\nAUTH:{LOGIN:'/auth/login',REGISTER:'/auth/register',LOGOUT:'/auth/logout',ME:'/auth/me',GOOGLE_CALLBACK:'/auth/google-callback'},// 住民管理\nRESIDENTS:{LIST:'/residents',CREATE:'/residents',GET:id=>\"/residents/\".concat(id),UPDATE:id=>\"/residents/\".concat(id),DELETE:id=>\"/residents/\".concat(id),CARE_PLAN:id=>\"/residents/\".concat(id,\"/care-plan\"),CARE_PLAN_HISTORY:id=>\"/residents/\".concat(id,\"/care-plan/history\"),CREATE_TASKS:id=>\"/residents/\".concat(id,\"/tasks\")},// AI 分析與照護計劃\nAI:{ANALYZE:'/analyze',GENERATE_CARE_PLAN:'/generate-care-plan'},// 照護任務\nTASKS:{UPDATE:id=>\"/tasks/\".concat(id)},// 照護計劃歷史\nCARE_PLAN_HISTORY:{GET:id=>\"/care-plan-history/\".concat(id)},// 共享功能\nSHARES:{CREATE:'/shares',META:token=>\"/shares/\".concat(token,\"/meta\"),AUTHENTICATE:token=>\"/shares/\".concat(token,\"/authenticate\"),DASHBOARD:token=>\"/shares/\".concat(token,\"/dashboard\")}};","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_BASE_URL","timeout","headers","withCredentials","interceptors","request","use","config","error","Promise","reject","response","_error$response","_error$response2","_error$response3","status","console","warn","API_ENDPOINTS","AUTH","LOGIN","REGISTER","LOGOUT","ME","GOOGLE_CALLBACK","RESIDENTS","LIST","CREATE","GET","id","concat","UPDATE","DELETE","CARE_PLAN","CARE_PLAN_HISTORY","CREATE_TASKS","AI","ANALYZE","GENERATE_CARE_PLAN","TASKS","SHARES","META","token","AUTHENTICATE","DASHBOARD"],"sources":["/Users/chetchung/Documents/V0Careplanparrot/src/api/client.js"],"sourcesContent":["import axios from 'axios';\n\n// 創建 axios 實例\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || '/api/v1',\n  timeout: 30000, // 30 秒超時\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true, // 包含 cookies (用於 session 認證)\n});\n\n// 請求攔截器\napiClient.interceptors.request.use(\n  (config) => {\n    // 可以在這裡添加認證 token (未來使用 JWT 時)\n    // const token = localStorage.getItem('token');\n    // if (token) {\n    //   config.headers.Authorization = `Bearer ${token}`;\n    // }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 響應攔截器\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // 處理常見錯誤\n    if (error.response?.status === 401) {\n      // 未授權，可能需要重新登入\n      console.warn('Unauthorized access - user may need to login');\n      // 可以觸發登出邏輯\n      // store.dispatch(logout());\n    } else if (error.response?.status === 403) {\n      // 禁止訪問\n      console.warn('Access forbidden');\n    } else if (error.response?.status >= 500) {\n      // 服務器錯誤\n      console.error('Server error:', error.response);\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport { apiClient };\n\n// API 端點定義\nexport const API_ENDPOINTS = {\n  // 認證\n  AUTH: {\n    LOGIN: '/auth/login',\n    REGISTER: '/auth/register',\n    LOGOUT: '/auth/logout',\n    ME: '/auth/me',\n    GOOGLE_CALLBACK: '/auth/google-callback',\n  },\n  \n  // 住民管理\n  RESIDENTS: {\n    LIST: '/residents',\n    CREATE: '/residents',\n    GET: (id) => `/residents/${id}`,\n    UPDATE: (id) => `/residents/${id}`,\n    DELETE: (id) => `/residents/${id}`,\n    CARE_PLAN: (id) => `/residents/${id}/care-plan`,\n    CARE_PLAN_HISTORY: (id) => `/residents/${id}/care-plan/history`,\n    CREATE_TASKS: (id) => `/residents/${id}/tasks`,\n  },\n\n  // AI 分析與照護計劃\n  AI: {\n    ANALYZE: '/analyze',\n    GENERATE_CARE_PLAN: '/generate-care-plan',\n  },\n\n  // 照護任務\n  TASKS: {\n    UPDATE: (id) => `/tasks/${id}`,\n  },\n\n  // 照護計劃歷史\n  CARE_PLAN_HISTORY: {\n    GET: (id) => `/care-plan-history/${id}`,\n  },\n\n  // 共享功能\n  SHARES: {\n    CREATE: '/shares',\n    META: (token) => `/shares/${token}/meta`,\n    AUTHENTICATE: (token) => `/shares/${token}/authenticate`,\n    DASHBOARD: (token) => `/shares/${token}/dashboard`,\n  },\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}